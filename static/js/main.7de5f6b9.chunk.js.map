{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","password","setPassword","error","setError","email","setEmail","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","requried","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setnewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","class","faPencilAlt","faTrash","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","autoFocus","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7de5f6b9.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\"\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(\"false\");\r\n    const onChange = (event) => {\r\n        const {\r\n            target : { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }                           \r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try {     \r\n            let data;\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            }\r\n            console.log(data);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n            <form className = \"container\" onSubmit = {onSubmit}>\r\n                <input\r\n                    className = \"authInput\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    requried\r\n                    value={email}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    className = \"authInput\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    className = \"authInput authSubmit\"\r\n                    type = \"submit\"\r\n                    value = {newAccount ? \"Create Account\" : \"Log In\"}\r\n                />\r\n                <span className = \"authError\">\r\n                    {error}\r\n                </span>\r\n            </form>\r\n            <span className = \"authSwitch\" onClick = {toggleAccount}>\r\n                {newAccount ? \"Log In\" : \"Create Account\" }\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import { faGithub, faGoogle, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target : {name}\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#43a892\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button className=\"authBtn\" onClick={onSocialClick} name=\"google\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button className=\"authBtn\" onClick = {onSocialClick} name = \"github\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { dbService, storageService } from \"fbase\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setnewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text : newNweet\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target : { value },\r\n        } = event;\r\n        setnewNweet(value);\r\n    };\r\n    return (\r\n        <div className = \"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    {isOwner && (\r\n                        <>\r\n                            <form className = \"container nweetEdit\" onSubmit = {onSubmit}>\r\n                                <input\r\n                                    className = \"nweet__formInput\"\r\n                                    type = \"text\"\r\n                                    placeholder = \"Edit your nweet\"\r\n                                    value = {newNweet}\r\n                                    required\r\n                                    onChange = {onChange}\r\n                                />\r\n                                <input className = \"formBtn\" type = \"submit\" value = \"Update Nweet\" />\r\n                            </form>\r\n                            <span className = \"formBtn cancelBtn\" onClick = {toggleEditing}>\r\n                                Cancel\r\n                            </span>\r\n                        </>\r\n                    )}\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && <img src = {nweetObj.attachmentUrl} />}\r\n                    {isOwner && (\r\n                        <div class=\"nweet__actions\">\r\n                        <span onClick={toggleEditing}>\r\n                          <FontAwesomeIcon icon={faPencilAlt} color=\"#499fe6\"/>\r\n                        </span>\r\n                        <span onClick={onDeleteClick}>\r\n                          <FontAwesomeIcon icon={faTrash} color=\"#e65b49\" />\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment,\"data_url\")\r\n            attachmentUrl = (await response.ref.getDownloadURL());\r\n        }\r\n        const nweetObj = {\r\n            text : nweet,\r\n            createdAt : Date.now(),\r\n            creatorId : userObj.uid,\r\n            attachmentUrl\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target : {value}\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target : { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget : { result }\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        if (Boolean(theFile)) {\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(null);\r\n    return (\r\n        <form className=\"factoryForm\" onSubmit={onSubmit}>\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input className=\"factoryInput__plus\" type=\"submit\" value=\"+\" />\r\n            </div>\r\n            <label className=\"factoryInput__label\" for=\"attach-file\">\r\n              <span>Add photos</span>\r\n              <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            \r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src = {attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                          }}\r\n                        />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\r\nimport { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService\r\n        .collection(\"nweets\")\r\n        .onSnapshot(snapshot => {\r\n            const nweetArray = snapshot.docs.map((doc) => ({\r\n                id : doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n    \r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj = {userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet\r\n                        key = {nweet.id}\r\n                        nweetObj = {nweet}\r\n                        isOwner = {nweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\"\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n    <nav>\r\n        <ul style={{display : \"flex\", justifyContent : \"center\", marginTop : 50 }}>\r\n            <li>\r\n                <Link to = \"/\" style={{ marginRight : 10 }}>\r\n                    <FontAwesomeIcon icon = {faTwitter} color = {\"#43a892\"} size=\"2x\" />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                    to = \"/profile\"\r\n                    style = {{\r\n                        marginLeft : 10,\r\n                        display : \"flex\",\r\n                        flexDirection :\"column\",\r\n                        alignItems : \"center\",\r\n                        fontSize : 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon = {faUser} color = {\"#43a892\"} size = \"2x\" />\r\n                    <span style={{ marginTop: 10, color : \"#3b4240\" }}>\r\n                        {userObj.displayName\r\n                            ? `${userObj.displayName}의 프로필`\r\n                            : \"Profile\"}\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default Navigation;","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const history = useHistory();\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target : { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName : newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            <form className=\"profileForm\" onSubmit = {onSubmit}>\r\n                <input\r\n                    className=\"profile__formInput\"\r\n                    onChange = {onChange}\r\n                    type = \"text\"\r\n                    autoFocus\r\n                    placeholder = \"Display name\"\r\n                    value = {newDisplayName}\r\n                />\r\n                <input\r\n                    className=\"formBtn\"\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj = {userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 80,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path = \"/\">\r\n                            <Home userObj = {userObj} />\r\n                        </Route>\r\n                        <Route exact path = \"/profile\">\r\n                            <Profile userObj = {userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <Route exact path = \"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n};\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName : user.displayName,\n          uid : user.uid,\n          updateProfile : (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName : user.displayName,\n      uid : user.uid,\n      updateProfile : (args) => user.updateProfile(args),\n    });\n  }\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj = {userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}